server {
    listen 80;
    listen [::]:80;
    server_name www.${APP_NAME};

    location /.well-known/acme-challenge/ {
        root /var/www/.docker/certbot/www/;
    }

    location / {
        return 301 https://${APP_NAME}$request_uri;
    }
}

server {
    listen 80;
    listen [::]:80;
    server_name ${APP_NAME};

    location /.well-known/acme-challenge/ {
        root /var/www/.docker/certbot/www/;
    }

    location / {
        return 301 https://${APP_NAME}$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.${APP_NAME};

    ssl_certificate /etc/letsencrypt/live/${APP_NAME}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${APP_NAME}/privkey.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    return 301 https://${APP_NAME}$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ${APP_NAME};

    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/${APP_NAME}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${APP_NAME}/privkey.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;

    include /etc/nginx/includes/default.conf;
}
